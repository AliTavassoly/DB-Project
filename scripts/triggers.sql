DROP TRIGGER IF EXISTS QueraEcoPlus.new_adv_notif;
DROP TRIGGER IF EXISTS QueraEcoPlus.request_status_update;
DROP TRIGGER IF EXISTS QueraEcoPlus.new_request;
DROP TRIGGER IF EXISTS QueraEcoPlus.new_solved_problem;
DROP TRIGGER IF EXISTS QueraEcoPlus.new_contest_participant_start;
DROP TRIGGER IF EXISTS QueraEcoPlus.new_contest_participant_update;

CREATE TRIGGER QueraEcoPlus.new_adv_notif AFTER INSERT ON QueraEcoPlus.ADV_RELATIVE_SKILLS
FOR EACH ROW BEGIN
    DECLARE i INT;
    DECLARE n INT;
    DECLARE user_id INT;
    DECLARE not_id INT;
    SET i = 0;
    SELECT count(DISTINCT CV_WORK_INFO_INTRESTS.USER_ID) FROM QueraEcoPlus.CV_WORK_INFO_INTRESTS 
        WHERE CV_WORK_INFO_INTRESTS.SKILL_NAME = NEW.SKILL_NAME INTO n;
    WHILE i < n DO
        SELECT USER_ID FROM QueraEcoPlus.CV_WORK_INFO_INTRESTS WHERE CV_WORK_INFO_INTRESTS.SKILL_NAME = NEW.SKILL_NAME LIMIT i,1 INTO user_id;
        
        SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES 
            WHERE TABLE_SCHEMA = "QueraEcoPlus"
                AND TABLE_NAME = 'NOTIFICATION' INTO not_id;
        -- SELECT MAX(USER.USER_ID)+1 FROM USER INTO not_id;
        
        INSERT INTO NOTIFICATION(CREATION_DATE, BODY) VALUES(CURRENT_TIME, 'new job offer');
        INSERT INTO USER_NOTIFICATION VALUES(not_id, user_id);
        INSERT INTO NEW_ADD_NOTIF VALUES(not_id, NEW.COMPANY_REGISTRATION_ID, NEW.ADD_ID);
        SET i = i + 1;
    END WHILE;
END;

CREATE TRIGGER QueraEcoPlus.request_status_update AFTER UPDATE ON QueraEcoPlus.REQUESTS
FOR EACH ROW BEGIN
    DECLARE not_id INT;
    SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES 
        WHERE TABLE_SCHEMA = "QueraEcoPlus"
            AND TABLE_NAME = 'NOTIFICATION' INTO not_id;
    INSERT INTO NOTIFICATION(CREATION_DATE, BODY) VALUES(CURRENT_TIME, 'request status update');
    INSERT INTO USER_NOTIFICATION VALUES(not_id, NEW.USER_ID);
    INSERT INTO REQUEST_STATUS_UPDATE VALUES(not_id, NEW.USER_ID, NEW.COMPANY_REGISTRATION_ID, NEW.ADD_ID);
END;

CREATE TRIGGER QueraEcoPlus.new_request AFTER INSERT ON QueraEcoPlus.REQUESTS
FOR EACH ROW BEGIN
    DECLARE not_id INT;
    SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES 
        WHERE TABLE_SCHEMA = "QueraEcoPlus"
            AND TABLE_NAME = 'NOTIFICATION' INTO not_id;
    INSERT INTO NOTIFICATION(CREATION_DATE, BODY) VALUES(CURRENT_TIME, 'new request');
    INSERT INTO NEW_REQUEST_NOTIF VALUES(not_id, NEW.USER_ID, NEW.COMPANY_REGISTRATION_ID, NEW.ADD_ID);
END;

CREATE TRIGGER QueraEcoPlus.new_solved_problem AFTER INSERT ON QueraEcoPlus.SUBMISSION
FOR EACH ROW BEGIN
    INSERT INTO ACTIVITY_HISTORY_PROBLEMS VALUES(NEW.USER_ID, NEW.PROBLEM_ID, NEW.SCORE);
END;

CREATE TRIGGER QueraEcoPlus.new_contest_participant_start AFTER INSERT ON QueraEcoPlus.CONTEST_PARTICIPANTS
FOR EACH ROW BEGIN
    INSERT INTO ACTIVITY_HISTORY_CONTEST VALUES(NEW.USER_ID, NEW.CONTEST_ID, NEW.SCORE, NEW.RNK);
END;

CREATE TRIGGER QueraEcoPlus.new_contest_participant_update AFTER UPDATE ON QueraEcoPlus.CONTEST_PARTICIPANTS
FOR EACH ROW BEGIN
    UPDATE ACTIVITY_HISTORY_CONTEST SET ACTIVITY_HISTORY_CONTEST.SCORE = NEW.SCORE, ACTIVITY_HISTORY_CONTEST.RNK = NEW.RNK
    WHERE NEW.USER_ID = ACTIVITY_HISTORY_CONTEST.USER_ID AND NEW.CONTEST_ID = ACTIVITY_HISTORY_CONTEST.CONTEST_ID;
END;